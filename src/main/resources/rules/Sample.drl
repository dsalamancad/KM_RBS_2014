package com.sample

import co.uniandes.KM.logicPuzzles.UI.DroolsTest.Message;
import co.uniandes.KM.logicPuzzles.mundo.*;
import co.uniandes.KM.logicPuzzles.Configuration;
import java.util.ArrayList;
		
rule "Positive elimination"
	when
		c : Cell( status == Cell.TRUE )
		neighboringCells :  ArrayList()
							from collect ( Cell ( status != Cell.IMPOSSIBLE && status != Cell.TRUE && 
							     segregateCoordinates( c ) >= (Configuration.DIMENSION_AMOUNT - 1)))
		cell: Cell() from neighboringCells
	then
		System.out.println( "Positive elimination" );
	 	cell.setStatus(Cell.IMPOSSIBLE);
	 	update(cell);
		//TODO: Alimentar los nuevos hechos a la sesión
		
end

rule "Negative elimination"
	when
		c : Cell( status == Cell.POSSIBLE || status == Cell.UNKNOWN )
		neighboringCells :  ArrayList( size  == ( Configuration.ITEMS_PER_DIMENSION - 1 ) * Configuration.DIMENSION_AMOUNT )
							from collect ( Cell ( status == Cell.IMPOSSIBLE && 
							     segregateCoordinates( c ) >= (Configuration.DIMENSION_AMOUNT - 1)))
	then
		c.setStatus(Cell.TRUE);
		update(c);
		//TODO: Alimentar el nuevo hecho a la sesión
end

rule "Simple Fact Possible Cells"
	when
		f : Fact()
		possibleCells :  ArrayList()
							from collect ( Cell ( status == Cell.UNKNOWN && 
							     segregateCoordinates( f ) >= (Configuration.DIMENSION_AMOUNT - 1)))
		pCell: Cell() from possibleCells
		
	then
		System.out.println( "Possible:"+ pCell.coordinatesToString() );
		pCell.setStatus(Cell.POSSIBLE);
	 	update(pCell);
end

rule "Simple Fact Impossible Cells"
	when
		f : Fact( )
		impossibleCells :  ArrayList()
							from collect ( Cell ( status == Cell.UNKNOWN && 
							     segregateCoordinates( f ) == 1 ))
		impCell: Cell() from impossibleCells
		
	then
		System.out.println( "Impossible:"+impCell.coordinatesToString());
		impCell.setStatus(Cell.IMPOSSIBLE);
	 	update(impCell);
end

rule "Hello World"
    when
        m : Message( status == Message.HELLO, myMessage : message )
    then
        System.out.println( myMessage );
        m.setMessage( "Goodbye cruel world" );
        m.setStatus( Message.GOODBYE );
        update( m );
end

rule "GoodBye"
    when
        Message( status == Message.GOODBYE, myMessage : message )
    then
        System.out.println( myMessage );
end